[{"/Users/gun/Development/React-Front-End-Test/src/index.js":"1","/Users/gun/Development/React-Front-End-Test/src/App.js":"2","/Users/gun/Development/React-Front-End-Test/src/reportWebVitals.js":"3","/Users/gun/Development/React-Front-End-Test/src/Task.js":"4","/Users/gun/Development/React-Front-End-Test/src/SubTask.js":"5","/Users/gun/Development/React-Front-End-Test/src/TaskContext.js":"6"},{"size":451,"mtime":1611595548000,"results":"7","hashOfConfig":"8"},{"size":3337,"mtime":1611656170908,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611595548000,"results":"10","hashOfConfig":"8"},{"size":1982,"mtime":1611655576773,"results":"11","hashOfConfig":"8"},{"size":861,"mtime":1611656175164,"results":"12","hashOfConfig":"8"},{"size":102,"mtime":1611651831547,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"35a0sz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/gun/Development/React-Front-End-Test/src/index.js",[],["28","29"],"/Users/gun/Development/React-Front-End-Test/src/App.js",[],"/Users/gun/Development/React-Front-End-Test/src/reportWebVitals.js",[],"/Users/gun/Development/React-Front-End-Test/src/Task.js",["30"],"import { useContext, useState } from 'react';\nimport { Button, Card, Divider, Input, Space, Typography } from 'antd';\nimport SubTask from './SubTask';\nimport { TaskContext } from './TaskContext';\n\nconst Task = ({ id, taskName, task, isAllDone }) => {\n  const [_, dispatch] = useContext(TaskContext);\n\n  const [subValue, setSubValue] = useState('');\n\n  const handleOnChangeInput = (e) => {\n    setSubValue(e.target.value);\n  };\n\n  const handleOnClickAddSubTask = () => {\n    dispatch({ type: 'ADD_SUB', id, payload: { name: subValue } });\n    setSubValue('');\n  };\n\n  const handleOnClickDupplicateTask = () => {\n    dispatch({ type: 'DUP', id });\n  };\n\n  const handleOnClickDelTask = () => {\n    dispatch({ type: 'DEL', id });\n  };\n\n  return (\n    <Space direction=\"vertical\" style={{ marginTop: 24 }}>\n      <Card\n        title={<Typography.Text delete={isAllDone}>{taskName}</Typography.Text>}\n        style={{ width: 600 }}\n        extra={\n          <>\n            <Button type=\"primary\" onClick={handleOnClickDupplicateTask}>\n              Duplicate\n            </Button>{' '}\n            <Button type=\"primary\" danger onClick={handleOnClickDelTask}>\n              Delete\n            </Button>\n          </>\n        }\n      >\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Space>\n            <Input\n              placeholder=\"Enter Subtask Name\"\n              style={{ width: 400 }}\n              onChange={handleOnChangeInput}\n              value={subValue}\n            />\n            <Button type=\"primary\" onClick={handleOnClickAddSubTask}>\n              Add Subtask\n            </Button>\n          </Space>\n          <Divider />\n          {task?.map(({ subId, name, isDone }, index) => (\n            <SubTask\n              taskId={id}\n              subId={subId}\n              key={index}\n              name={name}\n              isDone={isDone}\n            />\n          ))}\n        </Space>\n      </Card>\n    </Space>\n  );\n};\n\nexport default Task;\n","/Users/gun/Development/React-Front-End-Test/src/SubTask.js",["31"],"/Users/gun/Development/React-Front-End-Test/src/TaskContext.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":7,"column":10,"nodeType":"38","messageId":"39","endLine":7,"endColumn":11},{"ruleId":"36","severity":1,"message":"37","line":7,"column":10,"nodeType":"38","messageId":"39","endLine":7,"endColumn":11},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]